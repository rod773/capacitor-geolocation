{"ast":null,"code":"/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = win => {\n  const defaultPlatformMap = new Map();\n  defaultPlatformMap.set('web', {\n    name: 'web'\n  });\n  const capPlatforms = win.CapacitorPlatforms || {\n    currentPlatform: {\n      name: 'web'\n    },\n    platforms: defaultPlatformMap\n  };\n  const addPlatform = (name, platform) => {\n    capPlatforms.platforms.set(name, platform);\n  };\n  const setPlatform = name => {\n    if (capPlatforms.platforms.has(name)) {\n      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n    }\n  };\n  capPlatforms.addPlatform = addPlatform;\n  capPlatforms.setPlatform = setPlatform;\n  return capPlatforms;\n};\nconst initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n  var _a;\n  const config = webPlugin.config;\n  const Plugins = cap.Plugins;\n  if (!(config === null || config === void 0 ? void 0 : config.name)) {\n    // TODO: add link to upgrade guide\n    throw new Error(\"Capacitor WebPlugin is using the deprecated \\\"registerWebPlugin()\\\" function, but without the config. Please use \\\"registerPlugin()\\\" instead to register this web plugin.\\\"\");\n  }\n  // TODO: add link to upgrade guide\n  console.warn(\"Capacitor plugin \\\"\".concat(config.name, \"\\\" is using the deprecated \\\"registerWebPlugin()\\\" function\"));\n  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n    // Add the web plugin into the plugins registry if there already isn't\n    // an existing one. If it doesn't already exist, that means\n    // there's no existing native implementation for it.\n    // - OR -\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    Plugins[config.name] = webPlugin;\n  }\n};\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n  constructor(message, code, data) {\n    super(message);\n    this.message = message;\n    this.code = code;\n    this.data = data;\n  }\n}\nconst getPlatformId = win => {\n  var _a, _b;\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\nconst createCapacitor = win => {\n  var _a, _b, _c, _d, _e;\n  const capCustomPlatform = win.CapacitorCustomPlatform || null;\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  /**\n   * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n   */\n  const capPlatforms = win.CapacitorPlatforms;\n  const defaultGetPlatform = () => {\n    return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);\n  };\n  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n  const defaultIsNativePlatform = () => getPlatform() !== 'web';\n  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n  const defaultIsPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n    return false;\n  };\n  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;\n  const defaultGetPluginHeader = pluginName => {\n    var _a;\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n  const handleError = err => win.console.error(err);\n  const pluginMethodNoop = (_target, prop, pluginName) => {\n    return Promise.reject(\"\".concat(pluginName, \" does not have an implementation of \\\"\").concat(prop, \"\\\".\"));\n  };\n  const registeredPlugins = new Map();\n  const defaultRegisterPlugin = function (pluginName) {\n    let jsImplementations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const registeredPlugin = registeredPlugins.get(pluginName);\n    if (registeredPlugin) {\n      console.warn(\"Capacitor plugin \\\"\".concat(pluginName, \"\\\" already registered. Cannot register plugins twice.\"));\n      return registeredPlugin.proxy;\n    }\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n    const loadPluginImplementation = async () => {\n      if (!jsImplementation && platform in jsImplementations) {\n        jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n      } else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {\n        jsImplementation = typeof jsImplementations['web'] === 'function' ? jsImplementation = await jsImplementations['web']() : jsImplementation = jsImplementations['web'];\n      }\n      return jsImplementation;\n    };\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(\"\\\"\".concat(pluginName, \"\\\" plugin is not implemented on \").concat(platform), ExceptionCode.Unimplemented);\n      }\n    };\n    const createPluginMethodWrapper = prop => {\n      let remove;\n      const wrapper = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(\"\\\"\".concat(pluginName, \".\").concat(prop, \"()\\\" is not implemented on \").concat(platform), ExceptionCode.Unimplemented);\n          }\n        });\n        if (prop === 'addListener') {\n          p.remove = async () => remove();\n        }\n        return p;\n      };\n      // Some flair âœ¨\n      wrapper.toString = () => \"\".concat(prop.toString(), \"() { [capacitor code] }\");\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n      const remove = async () => {\n        const callbackId = await call;\n        removeListener({\n          eventName,\n          callbackId\n        }, callback);\n      };\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n      p.remove = async () => {\n        console.warn(\"Using addListener() without 'await' is deprecated.\");\n        await remove();\n      };\n      return p;\n    };\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n          case 'toJSON':\n            return () => ({});\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n          case 'removeListener':\n            return removeListener;\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n  // Add in convertFileSrc for web, it will already be available in native context\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.pluginMethodNoop = pluginMethodNoop;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n  // Deprecated props\n  cap.platform = cap.getPlatform();\n  cap.isNative = cap.isNativePlatform();\n  return cap;\n};\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n  constructor(config) {\n    this.listeners = {};\n    this.retainedEventArguments = {};\n    this.windowListeners = {};\n    if (config) {\n      // TODO: add link to upgrade guide\n      console.warn(\"Capacitor WebPlugin \\\"\".concat(config.name, \"\\\" config object was deprecated in v3 and will be removed in v4.\"));\n      this.config = config;\n    }\n  }\n  addListener(eventName, listenerFunc) {\n    let firstListener = false;\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      this.listeners[eventName] = [];\n      firstListener = true;\n    }\n    this.listeners[eventName].push(listenerFunc);\n    // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n    const windowListener = this.windowListeners[eventName];\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n    if (firstListener) {\n      this.sendRetainedArgumentsForEvent(eventName);\n    }\n    const remove = async () => this.removeListener(eventName, listenerFunc);\n    const p = Promise.resolve({\n      remove\n    });\n    return p;\n  }\n  async removeAllListeners() {\n    this.listeners = {};\n    for (const listener in this.windowListeners) {\n      this.removeWindowListener(this.windowListeners[listener]);\n    }\n    this.windowListeners = {};\n  }\n  notifyListeners(eventName, data, retainUntilConsumed) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      if (retainUntilConsumed) {\n        let args = this.retainedEventArguments[eventName];\n        if (!args) {\n          args = [];\n        }\n        args.push(data);\n        this.retainedEventArguments[eventName] = args;\n      }\n      return;\n    }\n    listeners.forEach(listener => listener(data));\n  }\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n  unimplemented() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not implemented';\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n  unavailable() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not available';\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n  async removeListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listenerFunc);\n    this.listeners[eventName].splice(index, 1);\n    // If there are no more listeners for this type of event,\n    // remove the window listener\n    if (!this.listeners[eventName].length) {\n      this.removeWindowListener(this.windowListeners[eventName]);\n    }\n  }\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n  sendRetainedArgumentsForEvent(eventName) {\n    const args = this.retainedEventArguments[eventName];\n    if (!args) {\n      return;\n    }\n    delete this.retainedEventArguments[eventName];\n    args.forEach(arg => {\n      this.notifyListeners(eventName, arg);\n    });\n  }\n}\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = str => encodeURIComponent(str).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = str => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nclass CapacitorCookiesPluginWeb extends WebPlugin {\n  async getCookies() {\n    const cookies = document.cookie;\n    const cookieMap = {};\n    cookies.split(';').forEach(cookie => {\n      if (cookie.length <= 0) return;\n      // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n      let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n      key = decode(key).trim();\n      value = decode(value).trim();\n      cookieMap[key] = value;\n    });\n    return cookieMap;\n  }\n  async setCookie(options) {\n    try {\n      // Safely Encoded Key/Value\n      const encodedKey = encode(options.key);\n      const encodedValue = encode(options.value);\n      // Clean & sanitize options\n      const expires = \"; expires=\".concat((options.expires || '').replace('expires=', '')); // Default is \"; expires=\"\n      const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n      const domain = options.url != null && options.url.length > 0 ? \"domain=\".concat(options.url) : '';\n      document.cookie = \"\".concat(encodedKey, \"=\").concat(encodedValue || '').concat(expires, \"; path=\").concat(path, \"; \").concat(domain, \";\");\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async deleteCookie(options) {\n    try {\n      document.cookie = \"\".concat(options.key, \"=; Max-Age=0\");\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async clearCookies() {\n    try {\n      const cookies = document.cookie.split(';') || [];\n      for (const cookie of cookies) {\n        document.cookie = cookie.replace(/^ +/, '').replace(/=.*/, \"=;expires=\".concat(new Date().toUTCString(), \";path=/\"));\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async clearAllCookies() {\n    try {\n      await this.clearCookies();\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\nconst CapacitorCookies = registerPlugin('CapacitorCookies', {\n  web: () => new CapacitorCookiesPluginWeb()\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nconst readBlobAsBase64 = async blob => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => {\n    const base64String = reader.result;\n    // remove prefix \"data:application/pdf;base64,\"\n    resolve(base64String.indexOf(',') >= 0 ? base64String.split(',')[1] : base64String);\n  };\n  reader.onerror = error => reject(error);\n  reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = function () {\n  let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const originalKeys = Object.keys(headers);\n  const loweredKeys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n  const normalized = loweredKeys.reduce((acc, key, index) => {\n    acc[key] = headers[originalKeys[index]];\n    return acc;\n  }, {});\n  return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = function (params) {\n  let shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!params) return null;\n  const output = Object.entries(params).reduce((accumulator, entry) => {\n    const [key, value] = entry;\n    let encodedValue;\n    let item;\n    if (Array.isArray(value)) {\n      item = '';\n      value.forEach(str => {\n        encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n        item += \"\".concat(key, \"=\").concat(encodedValue, \"&\");\n      });\n      // last character will always be \"&\" so slice it off\n      item.slice(0, -1);\n    } else {\n      encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n      item = \"\".concat(key, \"=\").concat(encodedValue);\n    }\n    return \"\".concat(accumulator, \"&\").concat(item);\n  }, '');\n  // Remove initial \"&\" from the reduce\n  return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nconst buildRequestInit = function (options) {\n  let extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const output = Object.assign({\n    method: options.method || 'GET',\n    headers: options.headers\n  }, extra);\n  // Get the content-type\n  const headers = normalizeHttpHeaders(options.headers);\n  const type = headers['content-type'] || '';\n  // If body is already a string, then pass it through as-is.\n  if (typeof options.data === 'string') {\n    output.body = options.data;\n  }\n  // Build request initializers based off of content-type\n  else if (type.includes('application/x-www-form-urlencoded')) {\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(options.data || {})) {\n      params.set(key, value);\n    }\n    output.body = params.toString();\n  } else if (type.includes('multipart/form-data') || options.data instanceof FormData) {\n    const form = new FormData();\n    if (options.data instanceof FormData) {\n      options.data.forEach((value, key) => {\n        form.append(key, value);\n      });\n    } else {\n      for (const key of Object.keys(options.data)) {\n        form.append(key, options.data[key]);\n      }\n    }\n    output.body = form;\n    const headers = new Headers(output.headers);\n    headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n    output.headers = headers;\n  } else if (type.includes('application/json') || typeof options.data === 'object') {\n    output.body = JSON.stringify(options.data);\n  }\n  return output;\n};\n// WEB IMPLEMENTATION\nclass CapacitorHttpPluginWeb extends WebPlugin {\n  /**\n   * Perform an Http request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async request(options) {\n    const requestInit = buildRequestInit(options, options.webFetchExtra);\n    const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n    const url = urlParams ? \"\".concat(options.url, \"?\").concat(urlParams) : options.url;\n    const response = await fetch(url, requestInit);\n    const contentType = response.headers.get('content-type') || '';\n    // Default to 'text' responseType so no parsing happens\n    let {\n      responseType = 'text'\n    } = response.ok ? options : {};\n    // If the response content-type is json, force the response to be json\n    if (contentType.includes('application/json')) {\n      responseType = 'json';\n    }\n    let data;\n    let blob;\n    switch (responseType) {\n      case 'arraybuffer':\n      case 'blob':\n        blob = await response.blob();\n        data = await readBlobAsBase64(blob);\n        break;\n      case 'json':\n        data = await response.json();\n        break;\n      case 'document':\n      case 'text':\n      default:\n        data = await response.text();\n    }\n    // Convert fetch headers to Capacitor HttpHeaders\n    const headers = {};\n    response.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      data,\n      headers,\n      status: response.status,\n      url: response.url\n    };\n  }\n  /**\n   * Perform an Http GET request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async get(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'GET'\n    }));\n  }\n  /**\n   * Perform an Http POST request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async post(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'POST'\n    }));\n  }\n  /**\n   * Perform an Http PUT request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async put(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'PUT'\n    }));\n  }\n  /**\n   * Perform an Http PATCH request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async patch(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'PATCH'\n    }));\n  }\n  /**\n   * Perform an Http DELETE request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async delete(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'DELETE'\n    }));\n  }\n}\nconst CapacitorHttp = registerPlugin('CapacitorHttp', {\n  web: () => new CapacitorHttpPluginWeb()\n});\n/******** END HTTP PLUGIN ********/\n\nexport { Capacitor, CapacitorCookies, CapacitorException, CapacitorHttp, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, buildRequestInit, registerPlugin, registerWebPlugin, setPlatform };","map":{"version":3,"names":["createCapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","CapacitorPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","initPlatforms","globalThis","self","window","global","legacyRegisterWebPlugin","cap","webPlugin","_a","config","Plugins","Error","console","warn","concat","includes","getPlatform","ExceptionCode","CapacitorException","constructor","message","code","data","getPlatformId","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","Capacitor","defaultGetPlatform","defaultIsNativePlatform","isNativePlatform","defaultIsPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","isPluginAvailable","defaultGetPluginHeader","PluginHeaders","find","h","handleError","err","error","pluginMethodNoop","_target","prop","Promise","reject","defaultRegisterPlugin","jsImplementations","arguments","length","undefined","registeredPlugin","proxy","pluginHeader","jsImplementation","loadPluginImplementation","createPluginMethod","impl","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","bind","Unimplemented","createPluginMethodWrapper","remove","wrapper","_len","args","Array","_key","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","Set","keys","registerPlugin","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","registerWebPlugin","WebPlugin","listeners","retainedEventArguments","windowListeners","listenerFunc","firstListener","push","windowListener","registered","addWindowListener","sendRetainedArgumentsForEvent","removeAllListeners","listener","removeWindowListener","notifyListeners","retainUntilConsumed","forEach","hasListeners","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","arg","WebView","encode","str","encodeURIComponent","replace","decodeURIComponent","escape","decode","CapacitorCookiesPluginWeb","getCookies","cookies","document","cookie","cookieMap","split","key","trim","setCookie","encodedKey","encodedValue","expires","path","domain","url","deleteCookie","clearCookies","Date","toUTCString","clearAllCookies","CapacitorCookies","web","readBlobAsBase64","blob","reader","FileReader","onload","base64String","result","onerror","readAsDataURL","normalizeHttpHeaders","headers","originalKeys","loweredKeys","map","k","toLocaleLowerCase","normalized","reduce","acc","buildUrlParams","params","shouldEncode","output","entries","accumulator","entry","item","isArray","slice","substr","buildRequestInit","extra","assign","method","type","body","URLSearchParams","FormData","form","append","Headers","delete","JSON","stringify","CapacitorHttpPluginWeb","request","requestInit","webFetchExtra","urlParams","shouldEncodeUrlParams","response","fetch","contentType","responseType","ok","json","text","status","post","put","patch","CapacitorHttp"],"sources":["D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\platforms.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\legacy\\legacy-web-plugin-merge.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\util.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\runtime.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\global.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\web-plugin.js","D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\core\\build\\core-plugins.js"],"sourcesContent":["const createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const setPlatform = CapacitorPlatforms.setPlatform;\n//# sourceMappingURL=platforms.js.map","export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!(config === null || config === void 0 ? void 0 : config.name)) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map","export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.data = data;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.retainedEventArguments = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        let firstListener = false;\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n            firstListener = true;\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        if (firstListener) {\n            this.sendRetainedArgumentsForEvent(eventName);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data, retainUntilConsumed) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            if (retainUntilConsumed) {\n                let args = this.retainedEventArguments[eventName];\n                if (!args) {\n                    args = [];\n                }\n                args.push(data);\n                this.retainedEventArguments[eventName] = args;\n            }\n            return;\n        }\n        listeners.forEach(listener => listener(data));\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n    sendRetainedArgumentsForEvent(eventName) {\n        const args = this.retainedEventArguments[eventName];\n        if (!args) {\n            return;\n        }\n        delete this.retainedEventArguments[eventName];\n        args.forEach(arg => {\n            this.notifyListeners(eventName, arg);\n        });\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nimport { WebPlugin } from './web-plugin';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = (str) => encodeURIComponent(str)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = (str) => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nexport class CapacitorCookiesPluginWeb extends WebPlugin {\n    async getCookies() {\n        const cookies = document.cookie;\n        const cookieMap = {};\n        cookies.split(';').forEach(cookie => {\n            if (cookie.length <= 0)\n                return;\n            // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n            let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n            key = decode(key).trim();\n            value = decode(value).trim();\n            cookieMap[key] = value;\n        });\n        return cookieMap;\n    }\n    async setCookie(options) {\n        try {\n            // Safely Encoded Key/Value\n            const encodedKey = encode(options.key);\n            const encodedValue = encode(options.value);\n            // Clean & sanitize options\n            const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n            const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n            const domain = options.url != null && options.url.length > 0\n                ? `domain=${options.url}`\n                : '';\n            document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}; ${domain};`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async deleteCookie(options) {\n        try {\n            document.cookie = `${options.key}=; Max-Age=0`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearCookies() {\n        try {\n            const cookies = document.cookie.split(';') || [];\n            for (const cookie of cookies) {\n                document.cookie = cookie\n                    .replace(/^ +/, '')\n                    .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearAllCookies() {\n        try {\n            await this.clearCookies();\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\nexport const CapacitorCookies = registerPlugin('CapacitorCookies', {\n    web: () => new CapacitorCookiesPluginWeb(),\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nexport const readBlobAsBase64 = async (blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        const base64String = reader.result;\n        // remove prefix \"data:application/pdf;base64,\"\n        resolve(base64String.indexOf(',') >= 0\n            ? base64String.split(',')[1]\n            : base64String);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = (headers = {}) => {\n    const originalKeys = Object.keys(headers);\n    const loweredKeys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n    const normalized = loweredKeys.reduce((acc, key, index) => {\n        acc[key] = headers[originalKeys[index]];\n        return acc;\n    }, {});\n    return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = (params, shouldEncode = true) => {\n    if (!params)\n        return null;\n    const output = Object.entries(params).reduce((accumulator, entry) => {\n        const [key, value] = entry;\n        let encodedValue;\n        let item;\n        if (Array.isArray(value)) {\n            item = '';\n            value.forEach(str => {\n                encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n                item += `${key}=${encodedValue}&`;\n            });\n            // last character will always be \"&\" so slice it off\n            item.slice(0, -1);\n        }\n        else {\n            encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n            item = `${key}=${encodedValue}`;\n        }\n        return `${accumulator}&${item}`;\n    }, '');\n    // Remove initial \"&\" from the reduce\n    return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nexport const buildRequestInit = (options, extra = {}) => {\n    const output = Object.assign({ method: options.method || 'GET', headers: options.headers }, extra);\n    // Get the content-type\n    const headers = normalizeHttpHeaders(options.headers);\n    const type = headers['content-type'] || '';\n    // If body is already a string, then pass it through as-is.\n    if (typeof options.data === 'string') {\n        output.body = options.data;\n    }\n    // Build request initializers based off of content-type\n    else if (type.includes('application/x-www-form-urlencoded')) {\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(options.data || {})) {\n            params.set(key, value);\n        }\n        output.body = params.toString();\n    }\n    else if (type.includes('multipart/form-data') ||\n        options.data instanceof FormData) {\n        const form = new FormData();\n        if (options.data instanceof FormData) {\n            options.data.forEach((value, key) => {\n                form.append(key, value);\n            });\n        }\n        else {\n            for (const key of Object.keys(options.data)) {\n                form.append(key, options.data[key]);\n            }\n        }\n        output.body = form;\n        const headers = new Headers(output.headers);\n        headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n        output.headers = headers;\n    }\n    else if (type.includes('application/json') ||\n        typeof options.data === 'object') {\n        output.body = JSON.stringify(options.data);\n    }\n    return output;\n};\n// WEB IMPLEMENTATION\nexport class CapacitorHttpPluginWeb extends WebPlugin {\n    /**\n     * Perform an Http request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async request(options) {\n        const requestInit = buildRequestInit(options, options.webFetchExtra);\n        const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n        const url = urlParams ? `${options.url}?${urlParams}` : options.url;\n        const response = await fetch(url, requestInit);\n        const contentType = response.headers.get('content-type') || '';\n        // Default to 'text' responseType so no parsing happens\n        let { responseType = 'text' } = response.ok ? options : {};\n        // If the response content-type is json, force the response to be json\n        if (contentType.includes('application/json')) {\n            responseType = 'json';\n        }\n        let data;\n        let blob;\n        switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n                blob = await response.blob();\n                data = await readBlobAsBase64(blob);\n                break;\n            case 'json':\n                data = await response.json();\n                break;\n            case 'document':\n            case 'text':\n            default:\n                data = await response.text();\n        }\n        // Convert fetch headers to Capacitor HttpHeaders\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            data,\n            headers,\n            status: response.status,\n            url: response.url,\n        };\n    }\n    /**\n     * Perform an Http GET request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async get(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'GET' }));\n    }\n    /**\n     * Perform an Http POST request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async post(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'POST' }));\n    }\n    /**\n     * Perform an Http PUT request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async put(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PUT' }));\n    }\n    /**\n     * Perform an Http PATCH request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async patch(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PATCH' }));\n    }\n    /**\n     * Perform an Http DELETE request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async delete(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'DELETE' }));\n    }\n}\nexport const CapacitorHttp = registerPlugin('CapacitorHttp', {\n    web: () => new CapacitorHttpPluginWeb(),\n});\n/******** END HTTP PLUGIN ********/\n//# sourceMappingURL=core-plugins.js.map"],"mappings":";AAAA,MAAMA,wBAAwB,GAAIC,GAAG,IAAK;EACtC,MAAMC,kBAAkB,GAAG,IAAIC,GAAG,EAAE;EACpCD,kBAAkB,CAACE,GAAG,CAAC,KAAK,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAE,CAAC;EAC9C,MAAMC,YAAY,GAAGL,GAAG,CAACM,kBAAkB,IAAI;IAC3CC,eAAe,EAAE;MAAEH,IAAI,EAAE;IAAK,CAAE;IAChCI,SAAS,EAAEP;EACnB,CAAK;EACD,MAAMQ,WAAW,GAAGA,CAACL,IAAI,EAAEM,QAAQ,KAAK;IACpCL,YAAY,CAACG,SAAS,CAACL,GAAG,CAACC,IAAI,EAAEM,QAAQ,CAAC;EAClD,CAAK;EACD,MAAMC,WAAW,GAAIP,IAAI,IAAK;IAC1B,IAAIC,YAAY,CAACG,SAAS,CAACI,GAAG,CAACR,IAAI,CAAC,EAAE;MAClCC,YAAY,CAACE,eAAe,GAAGF,YAAY,CAACG,SAAS,CAACK,GAAG,CAACT,IAAI,CAAC;IAC3E;EACA,CAAK;EACDC,YAAY,CAACI,WAAW,GAAGA,WAAW;EACtCJ,YAAY,CAACM,WAAW,GAAGA,WAAW;EACtC,OAAON,YAAY;AACvB,CAAC;AACD,MAAMS,aAAa,GAAId,GAAG,IAAMA,GAAG,CAACM,kBAAkB,GAAGP,wBAAwB,CAACC,GAAG,CAAE;AACvF;AACA;AACA;AACY,MAACM,kBAAkB,gBAAiBQ,aAAa,CAAE,OAAOC,UAAU,KAAK,WAAW,GAC1FA,UAAU,GACV,OAAOC,IAAI,KAAK,WAAW,GACvBA,IAAI,GACJ,OAAOC,MAAM,KAAK,WAAW,GACzBA,MAAM,GACN,OAAOC,MAAM,KAAK,WAAW,GACzBA,MAAM,GACN,EAAE;AACpB;AACA;AACA;AACY,MAACT,WAAW,GAAGH,kBAAkB,CAACG,WAAA;AAC9C;AACA;AACA;AACY,MAACE,WAAW,GAAGL,kBAAkB,CAACK,WAAA;ACvCvC,MAAMQ,uBAAuB,GAAGA,CAACC,GAAG,EAAEC,SAAS,KAAK;EACvD,IAAIC,EAAE;EACN,MAAMC,MAAM,GAAGF,SAAS,CAACE,MAAM;EAC/B,MAAMC,OAAO,GAAGJ,GAAG,CAACI,OAAO;EAC3B,IAAI,EAAED,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACnB,IAAI,CAAC,EAAE;IACxE;IACQ,MAAM,IAAIqB,KAAK,+KAA0K,CAAC;EAClM;EACA;EACIC,OAAO,CAACC,IAAI,uBAAAC,MAAA,CAAsBL,MAAM,CAACnB,IAAI,gEAA0D,CAAC;EACxG,IAAI,CAACoB,OAAO,CAACD,MAAM,CAACnB,IAAI,CAAC,KAAK,CAACkB,EAAE,GAAGC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACf,SAAS,MAAM,IAAI,IAAIc,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,QAAQ,CAACT,GAAG,CAACU,WAAW,EAAE,CAAC,CAAC,EAAE;IAChL;IACA;IACA;IACA;IACA;IACA;IACA;IACQN,OAAO,CAACD,MAAM,CAACnB,IAAI,CAAC,GAAGiB,SAAS;EACxC;AACA,CAAC;ACpBS,IAACU,aAAA;AACX,CAAC,UAAUA,aAAa,EAAE;EAC1B;AACA;AACA;AACA;AACA;AACA;EACIA,aAAa,CAAC,eAAe,CAAC,GAAG,eAAe;EACpD;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,aAAa,CAAC,aAAa,CAAC,GAAG,aAAa;AAChD,CAAC,EAAEA,aAAa,KAAKA,aAAa,GAAG,EAAE,CAAC,CAAC;AAClC,MAAMC,kBAAkB,SAASP,KAAK,CAAC;EAC1CQ,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC7B,KAAK,CAACF,OAAO,CAAC;IACd,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACxB;AACA;AACO,MAAMC,aAAa,GAAIrC,GAAG,IAAK;EAClC,IAAIsB,EAAE,EAAEgB,EAAE;EACV,IAAItC,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACuC,aAAa,EAAE;IAC7D,OAAO,SAAS;EACxB,CAAK,MACI,IAAI,CAACD,EAAE,GAAG,CAAChB,EAAE,GAAGtB,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAACwC,MAAM,MAAM,IAAI,IAAIlB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACmB,eAAe,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,MAAM,EAAE;IAChL,OAAO,KAAK;EACpB,CAAK,MACI;IACD,OAAO,KAAK;EACpB;AACA,CAAC;ACpCM,MAAMC,eAAe,GAAI3C,GAAG,IAAK;EACpC,IAAIsB,EAAE,EAAEgB,EAAE,EAAEM,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACtB,MAAMC,iBAAiB,GAAG/C,GAAG,CAACgD,uBAAuB,IAAI,IAAI;EAC7D,MAAM5B,GAAG,GAAGpB,GAAG,CAACiD,SAAS,IAAI,EAAE;EAC/B,MAAMzB,OAAO,GAAIJ,GAAG,CAACI,OAAO,GAAGJ,GAAG,CAACI,OAAO,IAAI,EAAG;EACrD;AACA;AACA;EACI,MAAMnB,YAAY,GAAGL,GAAG,CAACM,kBAAkB;EAC3C,MAAM4C,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,OAAOH,iBAAiB,KAAK,IAAI,GAC3BA,iBAAiB,CAAC3C,IAAI,GACtBiC,aAAa,CAACrC,GAAG,CAAC;EAChC,CAAK;EACD,MAAM8B,WAAW,GAAG,CAAC,CAACR,EAAE,GAAGjB,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,eAAe,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,WAAW,KAAKoB,kBAAkB;EAC/L,MAAMC,uBAAuB,GAAGA,CAAA,KAAMrB,WAAW,EAAE,KAAK,KAAK;EAC7D,MAAMsB,gBAAgB,GAAG,CAAC,CAACd,EAAE,GAAGjC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,eAAe,MAAM,IAAI,IAAI+B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACc,gBAAgB,KAAKD,uBAAuB;EAC9M,MAAME,wBAAwB,GAAIC,UAAU,IAAK;IAC7C,MAAMC,MAAM,GAAGC,iBAAiB,CAAC3C,GAAG,CAACyC,UAAU,CAAC;IAChD,IAAIC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC/C,SAAS,CAACI,GAAG,CAACkB,WAAW,EAAE,CAAC,EAAE;MACjG;MACY,OAAO,IAAI;IACvB;IACQ,IAAI2B,eAAe,CAACH,UAAU,CAAC,EAAE;MACzC;MACY,OAAO,IAAI;IACvB;IACQ,OAAO,KAAK;EACpB,CAAK;EACD,MAAMI,iBAAiB,GAAG,CAAC,CAACd,EAAE,GAAGvC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,eAAe,MAAM,IAAI,IAAIqC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACc,iBAAiB,KAChLL,wBAAwB;EAC5B,MAAMM,sBAAsB,GAAIL,UAAU,IAAK;IAAE,IAAIhC,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGF,GAAG,CAACwC,aAAa,MAAM,IAAI,IAAItC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1D,IAAI,KAAKkD,UAAU,CAAC;EAAC,CAAE;EACpK,MAAMG,eAAe,GAAG,CAAC,CAACZ,EAAE,GAAGxC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,eAAe,MAAM,IAAI,IAAIsC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,eAAe,KAAKE,sBAAsB;EAC3M,MAAMI,WAAW,GAAIC,GAAG,IAAKhE,GAAG,CAAC0B,OAAO,CAACuC,KAAK,CAACD,GAAG,CAAC;EACnD,MAAME,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,IAAI,EAAEd,UAAU,KAAK;IACpD,OAAOe,OAAO,CAACC,MAAM,IAAA1C,MAAA,CAAI0B,UAAU,4CAAA1B,MAAA,CAAwCwC,IAAI,QAAI,CAAC;EAC5F,CAAK;EACD,MAAMZ,iBAAiB,GAAG,IAAItD,GAAG,EAAE;EACnC,MAAMqE,qBAAqB,GAAG,SAAAA,CAACjB,UAAU,EAA6B;IAAA,IAA3BkB,iBAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAC7D,MAAMG,gBAAgB,GAAGpB,iBAAiB,CAAC3C,GAAG,CAACyC,UAAU,CAAC;IAC1D,IAAIsB,gBAAgB,EAAE;MAClBlD,OAAO,CAACC,IAAI,uBAAAC,MAAA,CAAsB0B,UAAU,0DAAsD,CAAC;MACnG,OAAOsB,gBAAgB,CAACC,KAAK;IACzC;IACQ,MAAMnE,QAAQ,GAAGoB,WAAW,EAAE;IAC9B,MAAMgD,YAAY,GAAGrB,eAAe,CAACH,UAAU,CAAC;IAChD,IAAIyB,gBAAgB;IACpB,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI,CAACD,gBAAgB,IAAIrE,QAAQ,IAAI8D,iBAAiB,EAAE;QACpDO,gBAAgB,GACZ,OAAOP,iBAAiB,CAAC9D,QAAQ,CAAC,KAAK,UAAU,GAC1CqE,gBAAgB,GAAG,MAAMP,iBAAiB,CAAC9D,QAAQ,CAAC,EAAE,GACtDqE,gBAAgB,GAAGP,iBAAiB,CAAC9D,QAAQ,CAAE;MAC1E,CAAa,MACI,IAAIqC,iBAAiB,KAAK,IAAI,IAC/B,CAACgC,gBAAgB,IACjB,KAAK,IAAIP,iBAAiB,EAAE;QAC5BO,gBAAgB,GACZ,OAAOP,iBAAiB,CAAC,KAAK,CAAC,KAAK,UAAU,GACvCO,gBAAgB,GAAG,MAAMP,iBAAiB,CAAC,KAAK,CAAC,EAAE,GACnDO,gBAAgB,GAAGP,iBAAiB,CAAC,KAAK,CAAE;MACvE;MACY,OAAOO,gBAAgB;IACnC,CAAS;IACD,MAAME,kBAAkB,GAAGA,CAACC,IAAI,EAAEd,IAAI,KAAK;MACvC,IAAI9C,EAAE,EAAEgB,EAAE;MACV,IAAIwC,YAAY,EAAE;QACd,MAAMK,YAAY,GAAGL,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACM,OAAO,CAACvB,IAAI,CAACwB,CAAC,IAAIjB,IAAI,KAAKiB,CAAC,CAACjF,IAAI,CAAC;QAChI,IAAI+E,YAAY,EAAE;UACd,IAAIA,YAAY,CAACG,KAAK,KAAK,SAAS,EAAE;YAClC,OAAQC,OAAO,IAAKnE,GAAG,CAACoE,aAAa,CAAClC,UAAU,EAAEc,IAAI,CAACqB,QAAQ,EAAE,EAAEF,OAAO,CAAC;UACnG,CAAqB,MACI;YACD,OAAO,CAACA,OAAO,EAAEG,QAAQ,KAAKtE,GAAG,CAACuE,cAAc,CAACrC,UAAU,EAAEc,IAAI,CAACqB,QAAQ,EAAE,EAAEF,OAAO,EAAEG,QAAQ,CAAC;UACxH;QACA,CAAiB,MACI,IAAIR,IAAI,EAAE;UACX,OAAO,CAAC5D,EAAE,GAAG4D,IAAI,CAACd,IAAI,CAAC,MAAM,IAAI,IAAI9C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsE,IAAI,CAACV,IAAI,CAAC;QAC/F;MACA,CAAa,MACI,IAAIA,IAAI,EAAE;QACX,OAAO,CAAC5C,EAAE,GAAG4C,IAAI,CAACd,IAAI,CAAC,MAAM,IAAI,IAAI9B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsD,IAAI,CAACV,IAAI,CAAC;MAC3F,CAAa,MACI;QACD,MAAM,IAAIlD,kBAAkB,MAAAJ,MAAA,CAAK0B,UAAU,sCAAA1B,MAAA,CAAkClB,QAAQ,GAAIqB,aAAa,CAAC8D,aAAa,CAAC;MACrI;IACA,CAAS;IACD,MAAMC,yBAAyB,GAAI1B,IAAI,IAAK;MACxC,IAAI2B,MAAM;MACV,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAa;QAAA,SAAAC,IAAA,GAAAxB,SAAA,CAAAC,MAAA,EAATwB,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;UAAJF,IAAI,CAAAE,IAAA,IAAA3B,SAAA,CAAA2B,IAAA;QAAA;QACpB,MAAMC,CAAC,GAAGrB,wBAAwB,EAAE,CAACsB,IAAI,CAACpB,IAAI,IAAI;UAC9C,MAAMqB,EAAE,GAAGtB,kBAAkB,CAACC,IAAI,EAAEd,IAAI,CAAC;UACzC,IAAImC,EAAE,EAAE;YACJ,MAAMF,CAAC,GAAGE,EAAE,CAAC,GAAGL,IAAI,CAAC;YACrBH,MAAM,GAAGM,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,CAAC,CAACN,MAAM;YACvD,OAAOM,CAAC;UAChC,CAAqB,MACI;YACD,MAAM,IAAIrE,kBAAkB,MAAAJ,MAAA,CAAK0B,UAAU,OAAA1B,MAAA,CAAIwC,IAAI,iCAAAxC,MAAA,CAA6BlB,QAAQ,GAAIqB,aAAa,CAAC8D,aAAa,CAAC;UAChJ;QACA,CAAiB,CAAC;QACF,IAAIzB,IAAI,KAAK,aAAa,EAAE;UACxBiC,CAAC,CAACN,MAAM,GAAG,YAAYA,MAAM,EAAE;QACnD;QACgB,OAAOM,CAAC;MACxB,CAAa;MACb;MACYL,OAAO,CAACP,QAAQ,GAAG,SAAA7D,MAAA,CAASwC,IAAI,CAACqB,QAAQ,EAAE,4BAAyB;MACpEe,MAAM,CAACC,cAAc,CAACT,OAAO,EAAE,MAAM,EAAE;QACnCU,KAAK,EAAEtC,IAAI;QACXuC,QAAQ,EAAE,KAAK;QACfC,YAAY,EAAE;MAC9B,CAAa,CAAC;MACF,OAAOZ,OAAO;IAC1B,CAAS;IACD,MAAMa,WAAW,GAAGf,yBAAyB,CAAC,aAAa,CAAC;IAC5D,MAAMgB,cAAc,GAAGhB,yBAAyB,CAAC,gBAAgB,CAAC;IAClE,MAAMiB,iBAAiB,GAAGA,CAACC,SAAS,EAAEtB,QAAQ,KAAK;MAC/C,MAAMuB,IAAI,GAAGJ,WAAW,CAAC;QAAEG;MAAS,CAAE,EAAEtB,QAAQ,CAAC;MACjD,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;QACvB,MAAMmB,UAAU,GAAG,MAAMD,IAAI;QAC7BH,cAAc,CAAC;UACXE,SAAS;UACTE;QACpB,CAAiB,EAAExB,QAAQ,CAAC;MAC5B,CAAa;MACD,MAAMW,CAAC,GAAG,IAAIhC,OAAO,CAAC8C,OAAO,IAAIF,IAAI,CAACX,IAAI,CAAC,MAAMa,OAAO,CAAC;QAAEpB;MAAM,CAAE,CAAC,CAAC,CAAC;MACtEM,CAAC,CAACN,MAAM,GAAG,YAAY;QACnBrE,OAAO,CAACC,IAAI,qDAAqD,CAAC;QAClE,MAAMoE,MAAM,EAAE;MAC9B,CAAa;MACD,OAAOM,CAAC;IACpB,CAAS;IACD,MAAMxB,KAAK,GAAG,IAAIuC,KAAK,CAAC,EAAE,EAAE;MACxBvG,GAAGA,CAACwG,CAAC,EAAEjD,IAAI,EAAE;QACT,QAAQA,IAAI;UAC5B;UACoB,KAAK,UAAU;YACX,OAAOO,SAAS;UACpB,KAAK,QAAQ;YACT,OAAO,OAAO,EAAE,CAAC;UACrB,KAAK,aAAa;YACd,OAAOG,YAAY,GAAGiC,iBAAiB,GAAGF,WAAW;UACzD,KAAK,gBAAgB;YACjB,OAAOC,cAAc;UACzB;YACI,OAAOhB,yBAAyB,CAAC1B,IAAI,CAAC;QAC9D;MACA;IACA,CAAS,CAAC;IACF5C,OAAO,CAAC8B,UAAU,CAAC,GAAGuB,KAAK;IAC3BrB,iBAAiB,CAACrD,GAAG,CAACmD,UAAU,EAAE;MAC9BlD,IAAI,EAAEkD,UAAU;MAChBuB,KAAK;MACLrE,SAAS,EAAE,IAAI8G,GAAG,CAAC,CACf,GAAGd,MAAM,CAACe,IAAI,CAAC/C,iBAAiB,CAAC,EACjC,IAAIM,YAAY,GAAG,CAACpE,QAAQ,CAAC,GAAG,EAAE,CAAC,CACtC;IACb,CAAS,CAAC;IACF,OAAOmE,KAAK;EACpB,CAAK;EACD,MAAM2C,cAAc,GAAG,CAAC,CAAC1E,EAAE,GAAGzC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACE,eAAe,MAAM,IAAI,IAAIuC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC0E,cAAc,KAAKjD,qBAAqB;EAC5M;EACI,IAAI,CAACnD,GAAG,CAACqG,cAAc,EAAE;IACrBrG,GAAG,CAACqG,cAAc,GAAGC,QAAQ,IAAIA,QAAQ;EACjD;EACItG,GAAG,CAACU,WAAW,GAAGA,WAAW;EAC7BV,GAAG,CAAC2C,WAAW,GAAGA,WAAW;EAC7B3C,GAAG,CAACgC,gBAAgB,GAAGA,gBAAgB;EACvChC,GAAG,CAACsC,iBAAiB,GAAGA,iBAAiB;EACzCtC,GAAG,CAAC8C,gBAAgB,GAAGA,gBAAgB;EACvC9C,GAAG,CAACoG,cAAc,GAAGA,cAAc;EACnCpG,GAAG,CAACuG,SAAS,GAAG3F,kBAAkB;EAClCZ,GAAG,CAACwG,KAAK,GAAG,CAAC,CAACxG,GAAG,CAACwG,KAAK;EACvBxG,GAAG,CAACyG,gBAAgB,GAAG,CAAC,CAACzG,GAAG,CAACyG,gBAAgB;EACjD;EACIzG,GAAG,CAACV,QAAQ,GAAGU,GAAG,CAACU,WAAW,EAAE;EAChCV,GAAG,CAAC0G,QAAQ,GAAG1G,GAAG,CAACgC,gBAAgB,EAAE;EACrC,OAAOhC,GAAG;AACd,CAAC;AACM,MAAM2G,mBAAmB,GAAI/H,GAAG,IAAMA,GAAG,CAACiD,SAAS,GAAGN,eAAe,CAAC3C,GAAG,CAAE;ACnLtE,MAACiD,SAAS,gBAAiB8E,mBAAmB,CAAC,OAAOhH,UAAU,KAAK,WAAW,GACtFA,UAAU,GACV,OAAOC,IAAI,KAAK,WAAW,GACvBA,IAAI,GACJ,OAAOC,MAAM,KAAK,WAAW,GACzBA,MAAM,GACN,OAAOC,MAAM,KAAK,WAAW,GACzBA,MAAM,GACN,EAAE;AACR,MAACsG,cAAc,GAAGvE,SAAS,CAACuE,cAAA;AACxC;AACA;AACA;AACA;AACA;AACY,MAAChG,OAAO,GAAGyB,SAAS,CAACzB,OAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACwG,iBAAiB,GAAIzE,MAAM,IAAKpC,uBAAuB,CAAC8B,SAAS,EAAEM,MAAM;;AC3BtF;AACA;AACA;AACO,MAAM0E,SAAS,CAAC;EACnBhG,WAAWA,CAACV,MAAM,EAAE;IAChB,IAAI,CAAC2G,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,sBAAsB,GAAG,EAAE;IAChC,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI7G,MAAM,EAAE;MACpB;MACYG,OAAO,CAACC,IAAI,0BAAAC,MAAA,CAAyBL,MAAM,CAACnB,IAAI,qEAAiE,CAAC;MAClH,IAAI,CAACmB,MAAM,GAAGA,MAAM;IAChC;EACA;EACIsF,WAAWA,CAACG,SAAS,EAAEqB,YAAY,EAAE;IACjC,IAAIC,aAAa,GAAG,KAAK;IACzB,MAAMJ,SAAS,GAAG,IAAI,CAACA,SAAS,CAAClB,SAAS,CAAC;IAC3C,IAAI,CAACkB,SAAS,EAAE;MACZ,IAAI,CAACA,SAAS,CAAClB,SAAS,CAAC,GAAG,EAAE;MAC9BsB,aAAa,GAAG,IAAI;IAChC;IACQ,IAAI,CAACJ,SAAS,CAAClB,SAAS,CAAC,CAACuB,IAAI,CAACF,YAAY,CAAC;IACpD;IACA;IACQ,MAAMG,cAAc,GAAG,IAAI,CAACJ,eAAe,CAACpB,SAAS,CAAC;IACtD,IAAIwB,cAAc,IAAI,CAACA,cAAc,CAACC,UAAU,EAAE;MAC9C,IAAI,CAACC,iBAAiB,CAACF,cAAc,CAAC;IAClD;IACQ,IAAIF,aAAa,EAAE;MACf,IAAI,CAACK,6BAA6B,CAAC3B,SAAS,CAAC;IACzD;IACQ,MAAMjB,MAAM,GAAG,MAAAA,CAAA,KAAY,IAAI,CAACe,cAAc,CAACE,SAAS,EAAEqB,YAAY,CAAC;IACvE,MAAMhC,CAAC,GAAGhC,OAAO,CAAC8C,OAAO,CAAC;MAAEpB;IAAM,CAAE,CAAC;IACrC,OAAOM,CAAC;EAChB;EACI,MAAMuC,kBAAkBA,CAAA,EAAG;IACvB,IAAI,CAACV,SAAS,GAAG,EAAE;IACnB,KAAK,MAAMW,QAAQ,IAAI,IAAI,CAACT,eAAe,EAAE;MACzC,IAAI,CAACU,oBAAoB,CAAC,IAAI,CAACV,eAAe,CAACS,QAAQ,CAAC,CAAC;IACrE;IACQ,IAAI,CAACT,eAAe,GAAG,EAAE;EACjC;EACIW,eAAeA,CAAC/B,SAAS,EAAE5E,IAAI,EAAE4G,mBAAmB,EAAE;IAClD,MAAMd,SAAS,GAAG,IAAI,CAACA,SAAS,CAAClB,SAAS,CAAC;IAC3C,IAAI,CAACkB,SAAS,EAAE;MACZ,IAAIc,mBAAmB,EAAE;QACrB,IAAI9C,IAAI,GAAG,IAAI,CAACiC,sBAAsB,CAACnB,SAAS,CAAC;QACjD,IAAI,CAACd,IAAI,EAAE;UACPA,IAAI,GAAG,EAAE;QAC7B;QACgBA,IAAI,CAACqC,IAAI,CAACnG,IAAI,CAAC;QACf,IAAI,CAAC+F,sBAAsB,CAACnB,SAAS,CAAC,GAAGd,IAAI;MAC7D;MACY;IACZ;IACQgC,SAAS,CAACe,OAAO,CAACJ,QAAQ,IAAIA,QAAQ,CAACzG,IAAI,CAAC,CAAC;EACrD;EACI8G,YAAYA,CAAClC,SAAS,EAAE;IACpB,OAAO,CAAC,CAAC,IAAI,CAACkB,SAAS,CAAClB,SAAS,CAAC,CAACtC,MAAM;EACjD;EACIyE,sBAAsBA,CAACC,eAAe,EAAEC,eAAe,EAAE;IACrD,IAAI,CAACjB,eAAe,CAACiB,eAAe,CAAC,GAAG;MACpCZ,UAAU,EAAE,KAAK;MACjBW,eAAe;MACfC,eAAe;MACfC,OAAO,EAAEC,KAAK,IAAI;QACd,IAAI,CAACR,eAAe,CAACM,eAAe,EAAEE,KAAK,CAAC;MAC5D;IACA,CAAS;EACT;EACIC,aAAaA,CAAA,EAA0B;IAAA,IAAzBC,GAAG,GAAAhF,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,iBAAiB;IACjC,OAAO,IAAIxB,SAAS,CAAC0E,SAAS,CAAC8B,GAAG,EAAE1H,aAAa,CAAC8D,aAAa,CAAC;EACxE;EACI6D,WAAWA,CAAA,EAAwB;IAAA,IAAvBD,GAAG,GAAAhF,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,eAAe;IAC7B,OAAO,IAAIxB,SAAS,CAAC0E,SAAS,CAAC8B,GAAG,EAAE1H,aAAa,CAAC4H,WAAW,CAAC;EACtE;EACI,MAAM7C,cAAcA,CAACE,SAAS,EAAEqB,YAAY,EAAE;IAC1C,MAAMH,SAAS,GAAG,IAAI,CAACA,SAAS,CAAClB,SAAS,CAAC;IAC3C,IAAI,CAACkB,SAAS,EAAE;MACZ;IACZ;IACQ,MAAM0B,KAAK,GAAG1B,SAAS,CAAC2B,OAAO,CAACxB,YAAY,CAAC;IAC7C,IAAI,CAACH,SAAS,CAAClB,SAAS,CAAC,CAAC8C,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAClD;IACA;IACQ,IAAI,CAAC,IAAI,CAAC1B,SAAS,CAAClB,SAAS,CAAC,CAACtC,MAAM,EAAE;MACnC,IAAI,CAACoE,oBAAoB,CAAC,IAAI,CAACV,eAAe,CAACpB,SAAS,CAAC,CAAC;IACtE;EACA;EACI0B,iBAAiBA,CAACqB,MAAM,EAAE;IACtB9I,MAAM,CAAC+I,gBAAgB,CAACD,MAAM,CAACX,eAAe,EAAEW,MAAM,CAACT,OAAO,CAAC;IAC/DS,MAAM,CAACtB,UAAU,GAAG,IAAI;EAChC;EACIK,oBAAoBA,CAACiB,MAAM,EAAE;IACzB,IAAI,CAACA,MAAM,EAAE;MACT;IACZ;IACQ9I,MAAM,CAACgJ,mBAAmB,CAACF,MAAM,CAACX,eAAe,EAAEW,MAAM,CAACT,OAAO,CAAC;IAClES,MAAM,CAACtB,UAAU,GAAG,KAAK;EACjC;EACIE,6BAA6BA,CAAC3B,SAAS,EAAE;IACrC,MAAMd,IAAI,GAAG,IAAI,CAACiC,sBAAsB,CAACnB,SAAS,CAAC;IACnD,IAAI,CAACd,IAAI,EAAE;MACP;IACZ;IACQ,OAAO,IAAI,CAACiC,sBAAsB,CAACnB,SAAS,CAAC;IAC7Cd,IAAI,CAAC+C,OAAO,CAACiB,GAAG,IAAI;MAChB,IAAI,CAACnB,eAAe,CAAC/B,SAAS,EAAEkD,GAAG,CAAC;IAChD,CAAS,CAAC;EACV;AACA;AC9GY,MAACC,OAAO,gBAAiB3C,cAAc,CAAC,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM4C,MAAM,GAAIC,GAAG,IAAKC,kBAAkB,CAACD,GAAG,CAAC,CAC1CE,OAAO,CAAC,sBAAsB,EAAEC,kBAAkB,CAAC,CACnDD,OAAO,CAAC,OAAO,EAAEE,MAAM,CAAC;AAC7B;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAIL,GAAG,IAAKA,GAAG,CAACE,OAAO,CAAC,kBAAkB,EAAEC,kBAAkB,CAAC;AACpE,MAAMG,yBAAyB,SAAS1C,SAAS,CAAC;EACrD,MAAM2C,UAAUA,CAAA,EAAG;IACf,MAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM;IAC/B,MAAMC,SAAS,GAAG,EAAE;IACpBH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC,CAAChC,OAAO,CAAC8B,MAAM,IAAI;MACjC,IAAIA,MAAM,CAACrG,MAAM,IAAI,CAAC,EAClB;MAChB;MACY,IAAI,CAACwG,GAAG,EAAExE,KAAK,CAAC,GAAGqE,MAAM,CAACR,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,CAACU,KAAK,CAAC,YAAY,CAAC;MACxEC,GAAG,GAAGR,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAE;MACxBzE,KAAK,GAAGgE,MAAM,CAAChE,KAAK,CAAC,CAACyE,IAAI,EAAE;MAC5BH,SAAS,CAACE,GAAG,CAAC,GAAGxE,KAAK;IAClC,CAAS,CAAC;IACF,OAAOsE,SAAS;EACxB;EACI,MAAMI,SAASA,CAAC7F,OAAO,EAAE;IACrB,IAAI;MACZ;MACY,MAAM8F,UAAU,GAAGjB,MAAM,CAAC7E,OAAO,CAAC2F,GAAG,CAAC;MACtC,MAAMI,YAAY,GAAGlB,MAAM,CAAC7E,OAAO,CAACmB,KAAK,CAAC;MACtD;MACY,MAAM6E,OAAO,gBAAA3J,MAAA,CAAgB,CAAC2D,OAAO,CAACgG,OAAO,IAAI,EAAE,EAAEhB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAE,CAAC;MAC/E,MAAMiB,IAAI,GAAG,CAACjG,OAAO,CAACiG,IAAI,IAAI,GAAG,EAAEjB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;MACxD,MAAMkB,MAAM,GAAGlG,OAAO,CAACmG,GAAG,IAAI,IAAI,IAAInG,OAAO,CAACmG,GAAG,CAAChH,MAAM,GAAG,CAAC,aAAA9C,MAAA,CAC5C2D,OAAO,CAACmG,GAAG,IACrB,EAAE;MACRZ,QAAQ,CAACC,MAAM,MAAAnJ,MAAA,CAAMyJ,UAAU,OAAAzJ,MAAA,CAAI0J,YAAY,IAAI,EAAE,EAAA1J,MAAA,CAAG2J,OAAO,aAAA3J,MAAA,CAAU4J,IAAI,QAAA5J,MAAA,CAAK6J,MAAM,MAAG;IACvG,CAAS,CACD,OAAOxH,KAAK,EAAE;MACV,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;IACxC;EACA;EACI,MAAM0H,YAAYA,CAACpG,OAAO,EAAE;IACxB,IAAI;MACAuF,QAAQ,CAACC,MAAM,MAAAnJ,MAAA,CAAM2D,OAAO,CAAC2F,GAAG,iBAAc;IAC1D,CAAS,CACD,OAAOjH,KAAK,EAAE;MACV,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;IACxC;EACA;EACI,MAAM2H,YAAYA,CAAA,EAAG;IACjB,IAAI;MACA,MAAMf,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;MAChD,KAAK,MAAMF,MAAM,IAAIF,OAAO,EAAE;QAC1BC,QAAQ,CAACC,MAAM,GAAGA,MAAM,CACnBR,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,KAAK,eAAA3I,MAAA,CAAe,IAAIiK,IAAI,EAAE,CAACC,WAAW,EAAE,YAAS,CAAC;MACnF;IACA,CAAS,CACD,OAAO7H,KAAK,EAAE;MACV,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;IACxC;EACA;EACI,MAAM8H,eAAeA,CAAA,EAAG;IACpB,IAAI;MACA,MAAM,IAAI,CAACH,YAAY,EAAE;IACrC,CAAS,CACD,OAAO3H,KAAK,EAAE;MACV,OAAOI,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;IACxC;EACA;AACA;AACY,MAAC+H,gBAAgB,GAAGxE,cAAc,CAAC,kBAAkB,EAAE;EAC/DyE,GAAG,EAAEA,CAAA,KAAM,IAAItB,yBAAyB;AAC5C,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAMuB,gBAAgB,GAAG,MAAOC,IAAI,IAAK,IAAI9H,OAAO,CAAC,CAAC8C,OAAO,EAAE7C,MAAM,KAAK;EAC7E,MAAM8H,MAAM,GAAG,IAAIC,UAAU,EAAE;EAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;IAClB,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAM;IAC1C;IACQrF,OAAO,CAACoF,YAAY,CAAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAChC0C,YAAY,CAACtB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAC1BsB,YAAY,CAAC;EAC3B,CAAK;EACDH,MAAM,CAACK,OAAO,GAAIxI,KAAK,IAAKK,MAAM,CAACL,KAAK,CAAC;EACzCmI,MAAM,CAACM,aAAa,CAACP,IAAI,CAAC;AAC9B,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,MAAMQ,oBAAoB,GAAG,SAAAA,CAAA,EAAkB;EAAA,IAAjBC,OAAO,GAAAnI,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACtC,MAAMoI,YAAY,GAAGrG,MAAM,CAACe,IAAI,CAACqF,OAAO,CAAC;EACzC,MAAME,WAAW,GAAGtG,MAAM,CAACe,IAAI,CAACqF,OAAO,CAAC,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,iBAAiB,EAAE,CAAC;EACxE,MAAMC,UAAU,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAACC,GAAG,EAAElC,GAAG,EAAEtB,KAAK,KAAK;IACvDwD,GAAG,CAAClC,GAAG,CAAC,GAAG0B,OAAO,CAACC,YAAY,CAACjD,KAAK,CAAC,CAAC;IACvC,OAAOwD,GAAG;EAClB,CAAK,EAAE,EAAE,CAAC;EACN,OAAOF,UAAU;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,SAAAA,CAACC,MAAM,EAA0B;EAAA,IAAxBC,YAAY,GAAA9I,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC/C,IAAI,CAAC6I,MAAM,EACP,OAAO,IAAI;EACf,MAAME,MAAM,GAAGhH,MAAM,CAACiH,OAAO,CAACH,MAAM,CAAC,CAACH,MAAM,CAAC,CAACO,WAAW,EAAEC,KAAK,KAAK;IACjE,MAAM,CAACzC,GAAG,EAAExE,KAAK,CAAC,GAAGiH,KAAK;IAC1B,IAAIrC,YAAY;IAChB,IAAIsC,IAAI;IACR,IAAIzH,KAAK,CAAC0H,OAAO,CAACnH,KAAK,CAAC,EAAE;MACtBkH,IAAI,GAAG,EAAE;MACTlH,KAAK,CAACuC,OAAO,CAACoB,GAAG,IAAI;QACjBiB,YAAY,GAAGiC,YAAY,GAAGjD,kBAAkB,CAACD,GAAG,CAAC,GAAGA,GAAG;QAC3DuD,IAAI,OAAAhM,MAAA,CAAOsJ,GAAG,OAAAtJ,MAAA,CAAI0J,YAAY,MAAG;MACjD,CAAa,CAAC;MACd;MACYsC,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAS,MACI;MACDxC,YAAY,GAAGiC,YAAY,GAAGjD,kBAAkB,CAAC5D,KAAK,CAAC,GAAGA,KAAK;MAC/DkH,IAAI,MAAAhM,MAAA,CAAMsJ,GAAG,OAAAtJ,MAAA,CAAI0J,YAAY,CAAE;IAC3C;IACQ,UAAA1J,MAAA,CAAU8L,WAAW,OAAA9L,MAAA,CAAIgM,IAAI;EACrC,CAAK,EAAE,EAAE,CAAC;EACV;EACI,OAAOJ,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACY,MAACC,gBAAgB,GAAG,SAAAA,CAACzI,OAAO,EAAiB;EAAA,IAAf0I,KAAK,GAAAxJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAChD,MAAM+I,MAAM,GAAGhH,MAAM,CAAC0H,MAAM,CAAC;IAAEC,MAAM,EAAE5I,OAAO,CAAC4I,MAAM,IAAI,KAAK;IAAEvB,OAAO,EAAErH,OAAO,CAACqH;EAAO,CAAE,EAAEqB,KAAK,CAAC;EACtG;EACI,MAAMrB,OAAO,GAAGD,oBAAoB,CAACpH,OAAO,CAACqH,OAAO,CAAC;EACrD,MAAMwB,IAAI,GAAGxB,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE;EAC9C;EACI,IAAI,OAAOrH,OAAO,CAACnD,IAAI,KAAK,QAAQ,EAAE;IAClCoL,MAAM,CAACa,IAAI,GAAG9I,OAAO,CAACnD,IAAI;EAClC;EACA;EAAA,KACS,IAAIgM,IAAI,CAACvM,QAAQ,CAAC,mCAAmC,CAAC,EAAE;IACzD,MAAMyL,MAAM,GAAG,IAAIgB,eAAe,EAAE;IACpC,KAAK,MAAM,CAACpD,GAAG,EAAExE,KAAK,CAAC,IAAIF,MAAM,CAACiH,OAAO,CAAClI,OAAO,CAACnD,IAAI,IAAI,EAAE,CAAC,EAAE;MAC3DkL,MAAM,CAACnN,GAAG,CAAC+K,GAAG,EAAExE,KAAK,CAAC;IAClC;IACQ8G,MAAM,CAACa,IAAI,GAAGf,MAAM,CAAC7H,QAAQ,EAAE;EACvC,CAAK,MACI,IAAI2I,IAAI,CAACvM,QAAQ,CAAC,qBAAqB,CAAC,IACzC0D,OAAO,CAACnD,IAAI,YAAYmM,QAAQ,EAAE;IAClC,MAAMC,IAAI,GAAG,IAAID,QAAQ,EAAE;IAC3B,IAAIhJ,OAAO,CAACnD,IAAI,YAAYmM,QAAQ,EAAE;MAClChJ,OAAO,CAACnD,IAAI,CAAC6G,OAAO,CAAC,CAACvC,KAAK,EAAEwE,GAAG,KAAK;QACjCsD,IAAI,CAACC,MAAM,CAACvD,GAAG,EAAExE,KAAK,CAAC;MACvC,CAAa,CAAC;IACd,CAAS,MACI;MACD,KAAK,MAAMwE,GAAG,IAAI1E,MAAM,CAACe,IAAI,CAAChC,OAAO,CAACnD,IAAI,CAAC,EAAE;QACzCoM,IAAI,CAACC,MAAM,CAACvD,GAAG,EAAE3F,OAAO,CAACnD,IAAI,CAAC8I,GAAG,CAAC,CAAC;MACnD;IACA;IACQsC,MAAM,CAACa,IAAI,GAAGG,IAAI;IAClB,MAAM5B,OAAO,GAAG,IAAI8B,OAAO,CAAClB,MAAM,CAACZ,OAAO,CAAC;IAC3CA,OAAO,CAAC+B,MAAM,CAAC,cAAc,CAAC,CAAC;IAC/BnB,MAAM,CAACZ,OAAO,GAAGA,OAAO;EAChC,CAAK,MACI,IAAIwB,IAAI,CAACvM,QAAQ,CAAC,kBAAkB,CAAC,IACtC,OAAO0D,OAAO,CAACnD,IAAI,KAAK,QAAQ,EAAE;IAClCoL,MAAM,CAACa,IAAI,GAAGO,IAAI,CAACC,SAAS,CAACtJ,OAAO,CAACnD,IAAI,CAAC;EAClD;EACI,OAAOoL,MAAM;AACjB;AACA;AACO,MAAMsB,sBAAsB,SAAS7G,SAAS,CAAC;EACtD;AACA;AACA;AACA;EACI,MAAM8G,OAAOA,CAACxJ,OAAO,EAAE;IACnB,MAAMyJ,WAAW,GAAGhB,gBAAgB,CAACzI,OAAO,EAAEA,OAAO,CAAC0J,aAAa,CAAC;IACpE,MAAMC,SAAS,GAAG7B,cAAc,CAAC9H,OAAO,CAAC+H,MAAM,EAAE/H,OAAO,CAAC4J,qBAAqB,CAAC;IAC/E,MAAMzD,GAAG,GAAGwD,SAAS,MAAAtN,MAAA,CAAM2D,OAAO,CAACmG,GAAG,OAAA9J,MAAA,CAAIsN,SAAS,IAAK3J,OAAO,CAACmG,GAAG;IACnE,MAAM0D,QAAQ,GAAG,MAAMC,KAAK,CAAC3D,GAAG,EAAEsD,WAAW,CAAC;IAC9C,MAAMM,WAAW,GAAGF,QAAQ,CAACxC,OAAO,CAAC/L,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE;IACtE;IACQ,IAAI;MAAE0O,YAAY,GAAG;IAAM,CAAE,GAAGH,QAAQ,CAACI,EAAE,GAAGjK,OAAO,GAAG,EAAE;IAClE;IACQ,IAAI+J,WAAW,CAACzN,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MAC1C0N,YAAY,GAAG,MAAM;IACjC;IACQ,IAAInN,IAAI;IACR,IAAI+J,IAAI;IACR,QAAQoD,YAAY;MAChB,KAAK,aAAa;MAClB,KAAK,MAAM;QACPpD,IAAI,GAAG,MAAMiD,QAAQ,CAACjD,IAAI,EAAE;QAC5B/J,IAAI,GAAG,MAAM8J,gBAAgB,CAACC,IAAI,CAAC;QACnC;MACJ,KAAK,MAAM;QACP/J,IAAI,GAAG,MAAMgN,QAAQ,CAACK,IAAI,EAAE;QAC5B;MACJ,KAAK,UAAU;MACf,KAAK,MAAM;MACX;QACIrN,IAAI,GAAG,MAAMgN,QAAQ,CAACM,IAAI,EAAE;IAC5C;IACA;IACQ,MAAM9C,OAAO,GAAG,EAAE;IAClBwC,QAAQ,CAACxC,OAAO,CAAC3D,OAAO,CAAC,CAACvC,KAAK,EAAEwE,GAAG,KAAK;MACrC0B,OAAO,CAAC1B,GAAG,CAAC,GAAGxE,KAAK;IAChC,CAAS,CAAC;IACF,OAAO;MACHtE,IAAI;MACJwK,OAAO;MACP+C,MAAM,EAAEP,QAAQ,CAACO,MAAM;MACvBjE,GAAG,EAAE0D,QAAQ,CAAC1D;IAC1B,CAAS;EACT;EACA;AACA;AACA;AACA;EACI,MAAM7K,GAAGA,CAAC0E,OAAO,EAAE;IACf,OAAO,IAAI,CAACwJ,OAAO,CAACvI,MAAM,CAAC0H,MAAM,CAAC1H,MAAM,CAAC0H,MAAM,CAAC,EAAE,EAAE3I,OAAO,CAAC,EAAE;MAAE4I,MAAM,EAAE;IAAK,CAAE,CAAC,CAAC;EACzF;EACA;AACA;AACA;AACA;EACI,MAAMyB,IAAIA,CAACrK,OAAO,EAAE;IAChB,OAAO,IAAI,CAACwJ,OAAO,CAACvI,MAAM,CAAC0H,MAAM,CAAC1H,MAAM,CAAC0H,MAAM,CAAC,EAAE,EAAE3I,OAAO,CAAC,EAAE;MAAE4I,MAAM,EAAE;IAAM,CAAE,CAAC,CAAC;EAC1F;EACA;AACA;AACA;AACA;EACI,MAAM0B,GAAGA,CAACtK,OAAO,EAAE;IACf,OAAO,IAAI,CAACwJ,OAAO,CAACvI,MAAM,CAAC0H,MAAM,CAAC1H,MAAM,CAAC0H,MAAM,CAAC,EAAE,EAAE3I,OAAO,CAAC,EAAE;MAAE4I,MAAM,EAAE;IAAK,CAAE,CAAC,CAAC;EACzF;EACA;AACA;AACA;AACA;EACI,MAAM2B,KAAKA,CAACvK,OAAO,EAAE;IACjB,OAAO,IAAI,CAACwJ,OAAO,CAACvI,MAAM,CAAC0H,MAAM,CAAC1H,MAAM,CAAC0H,MAAM,CAAC,EAAE,EAAE3I,OAAO,CAAC,EAAE;MAAE4I,MAAM,EAAE;IAAO,CAAE,CAAC,CAAC;EAC3F;EACA;AACA;AACA;AACA;EACI,MAAMQ,MAAMA,CAACpJ,OAAO,EAAE;IAClB,OAAO,IAAI,CAACwJ,OAAO,CAACvI,MAAM,CAAC0H,MAAM,CAAC1H,MAAM,CAAC0H,MAAM,CAAC,EAAE,EAAE3I,OAAO,CAAC,EAAE;MAAE4I,MAAM,EAAE;IAAQ,CAAE,CAAC,CAAC;EAC5F;AACA;AACY,MAAC4B,aAAa,GAAGvI,cAAc,CAAC,eAAe,EAAE;EACzDyE,GAAG,EAAEA,CAAA,KAAM,IAAI6C,sBAAsB;AACzC,CAAC;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}