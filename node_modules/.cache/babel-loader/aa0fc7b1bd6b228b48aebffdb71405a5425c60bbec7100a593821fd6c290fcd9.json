{"ast":null,"code":"import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n  async getCurrentPosition(options) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(pos => {\n        resolve(pos);\n      }, err => {\n        reject(err);\n      }, Object.assign({\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0\n      }, options));\n    });\n  }\n  async watchPosition(options, callback) {\n    const id = navigator.geolocation.watchPosition(pos => {\n      callback(pos);\n    }, err => {\n      callback(null, err);\n    }, Object.assign({\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 0\n    }, options));\n    return \"\".concat(id);\n  }\n  async clearWatch(options) {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n  async checkPermissions() {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation'\n    });\n    return {\n      location: permission.state,\n      coarseLocation: permission.state\n    };\n  }\n  async requestPermissions() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };","map":{"version":3,"names":["WebPlugin","GeolocationWeb","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","id","concat","clearWatch","window","parseInt","checkPermissions","permissions","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","unimplemented","Geolocation"],"sources":["D:\\PROJECTS\\capacitor-geolocation\\node_modules\\@capacitor\\geolocation\\src\\web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CallbackID,\n  GeolocationPlugin,\n  PermissionStatus,\n  Position,\n  PositionOptions,\n  WatchPositionCallback,\n} from './definitions';\n\nexport class GeolocationWeb extends WebPlugin implements GeolocationPlugin {\n  async getCurrentPosition(options?: PositionOptions): Promise<Position> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          resolve(pos);\n        },\n        err => {\n          reject(err);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 0,\n          ...options,\n        },\n      );\n    });\n  }\n\n  async watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID> {\n    const id = navigator.geolocation.watchPosition(\n      pos => {\n        callback(pos);\n      },\n      err => {\n        callback(null, err);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0,\n        ...options,\n      },\n    );\n\n    return `${id}`;\n  }\n\n  async clearWatch(options: { id: string }): Promise<void> {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation',\n    });\n    return { location: permission.state, coarseLocation: permission.state };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Geolocation = new GeolocationWeb();\n\nexport { Geolocation };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAW3C,OAAM,MAAOC,cAAe,SAAQD,SAAS;EAC3C,MAAME,kBAAkBA,CAACC,OAAyB;IAChD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrCC,SAAS,CAACC,WAAW,CAACN,kBAAkB,CACtCO,GAAG,IAAG;QACJJ,OAAO,CAACI,GAAG,CAAC;MACd,CAAC,EACDC,GAAG,IAAG;QACJJ,MAAM,CAACI,GAAG,CAAC;MACb,CAAC,EAAAC,MAAA,CAAAC,MAAA;QAECC,kBAAkB,EAAE,KAAK;QACzBC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE;MAAC,GACVZ,OAAO,EAEb;IACH,CAAC,CAAC;EACJ;EAEA,MAAMa,aAAaA,CACjBb,OAAwB,EACxBc,QAA+B;IAE/B,MAAMC,EAAE,GAAGX,SAAS,CAACC,WAAW,CAACQ,aAAa,CAC5CP,GAAG,IAAG;MACJQ,QAAQ,CAACR,GAAG,CAAC;IACf,CAAC,EACDC,GAAG,IAAG;MACJO,QAAQ,CAAC,IAAI,EAAEP,GAAG,CAAC;IACrB,CAAC,EAAAC,MAAA,CAAAC,MAAA;MAECC,kBAAkB,EAAE,KAAK;MACzBC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE;IAAC,GACVZ,OAAO,EAEb;IAED,UAAAgB,MAAA,CAAUD,EAAE;EACd;EAEA,MAAME,UAAUA,CAACjB,OAAuB;IACtCkB,MAAM,CAACd,SAAS,CAACC,WAAW,CAACY,UAAU,CAACE,QAAQ,CAACnB,OAAO,CAACe,EAAE,EAAE,EAAE,CAAC,CAAC;EACnE;EAEA,MAAMK,gBAAgBA,CAAA;IACpB,IAAI,OAAOhB,SAAS,KAAK,WAAW,IAAI,CAACA,SAAS,CAACiB,WAAW,EAAE;MAC9D,MAAM,IAAI,CAACC,WAAW,CAAC,+CAA+C,CAAC;;IAGzE,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACd,SAAS,CAACiB,WAAW,CAACG,KAAK,CAAC;MAC1DC,IAAI,EAAE;KACP,CAAC;IACF,OAAO;MAAEC,QAAQ,EAAEH,UAAU,CAACI,KAAK;MAAEC,cAAc,EAAEL,UAAU,CAACI;IAAK,CAAE;EACzE;EAEA,MAAME,kBAAkBA,CAAA;IACtB,MAAM,IAAI,CAACC,aAAa,CAAC,yBAAyB,CAAC;EACrD;;AAGF,MAAMC,WAAW,GAAG,IAAIjC,cAAc,EAAE;AAExC,SAASiC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}